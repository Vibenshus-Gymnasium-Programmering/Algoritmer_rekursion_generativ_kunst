#+title: Algoritmer, rekursion, pseudokode og generativ kunst
#+subtitle: Programmering B
#+author: Vibenshus Gymnasium
#+Date: 2023-2024

* Introduktion
Dette er en kort beskrivelse af undervisningsforløbet omkring algoritmer, rekursion, abstrakt dokumentation og generativ kunst.

* 1. Lektion - Beskriv billedet
Eleverne i klassen blev inddelt i 2 lige store grupper. Hver gruppe fik udleveret papir, skriveredskaber, farvede tuscher samt et billede af generativ kunst, *som den anden gruppe ikke måtte se*.

De to billeder var

[[./img/spiral.gif]]

og

[[./img/puzzle2.png]]


Opgaven til hver elev i hver gruppe var nu at give en skriftlig beskrivelse af deres billede.

Efter endt beskrivelse, byttede elever fra hver gruppe beskrivelser med hinanden.

Hver elev skulle nu tegne et billede efter deres givne beskrivelse fra den anden grupper. Med tegne menes der fysisk tegning på papir med tuscher og lignende.

Til sidst blev begge billeder afsløret for alle elever, og oprindeligt billede, beskrivelser og tegnede billeder kunne sammenlignes.

*Pointen med øvelsen var at tydeliggøre, hvor vigtig præcis dokumentation er i programmeringsfaget.*

* 2. Lektion - Introduktion til turtle
Her blev eleverne introduceret til biblioteket =turtle=, som skulle bruges til simpel animation/tegning.

Følgende guide blev fulgt: https://realpython.com/beginners-guide-python-turtle/

Ved hjælp at turtle var de så muligt for eleverne at skabe sin egen generative kunst.

Følgende artikel blev brugt som udgangspunkt: https://spin.atomicobject.com/generative-art-zero-random/

* 3. Lektion - Algoritmer og pseudokode
Her blev eleverne introduceret til bruge af *pseudokode* som en del af den abstrakte dokumentation til programmeringsfaget.

Eleverne blev bedt om at læse følgende artikel: https://medium.com/@ngunyimacharia/how-to-write-pseudocode-a-beginners-guide-29956242698

Man kan finde yderligere info om pseudokode i programmeringsbogen på systime.dk. Se mere her: https://programmering.systime.dk/?id=214


Først fik eleverne til opgave at skrive simple funktioner ved hjælp af pseudokode.

Efterfølgende skulle eleverne arbejde med Euklids algoritme taget fra forberedelsesmaterialet til matematik A HTX 2023. Først skulle der skrives pseudokode og siden "rigtig" kode til at implementere Euklids algoritme til at finde den største fælles divisor for to tal.

* 4. Lektion - Rekursion
I dette forløb var der fokus på at skrive rekursiv kode.

Der blev blandt andet leget med at tegne et træ vha turtle

#+begin_src python :exports both :results output :eval never-export
import turtle
 
def tree(branchLen,t):
    if branchLen > 10:
        t.forward(branchLen)
        t.right(40)
        tree(branchLen-30,t)
        t.left(80)
        tree(branchLen-30,t)
        t.right(40)
        t.backward(branchLen)
 
def main():
    myWin = turtle.Screen()
    myWin.bgcolor("black")
    t = turtle.Turtle()    
    t.width(10)
    t.left(90)
    t.up()
    
    t.backward(100)
    t.down()
    t.color("silver")
    tree(150,t)
    myWin.exitonclick()
#+end_src

Der blev også brugt en analogi om at sidde i en biograf, hvor det er så mørkt, at man ikke kan se, hvilken række man sidder på. Man bliver derfor ved med at spørge rækken foran, hvor de sidder, indtil man rammer den første række, som kan fortælle, at de sidder forrest. Dette er implementeret i følgende kodeeksempel

#+begin_src python :exports both :results output :eval never-export
def which_row(n):
    if n == 1:
        rownumber = 1
        print(f"jeg sidder i række {n} ")
    else:
        print("Hvilken række sidder du i?")
        rownumber = 1+ which_row(n-1)
        print(f"jeg sidder i række {n}")
    return rownumber
 
which_row(5)
#+end_src

Man kan se mere her: https://colab.research.google.com/github/FuRong1213-vibenshus/Generativeart/blob/main/algorithm.ipynb
